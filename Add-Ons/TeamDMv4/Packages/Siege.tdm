//Siege
//1
//Teams take turns to defend critical points in a fort or try and take control of them.
//sg
//0
$TeamDM::Siege::MaxTakeOver = 50; //about 10 seconds
$TeamDM::Siege::DefendTime = 10; //10 minutes
$TeamDM::Siege::RedColor = wrenchColorMatch("1 0 0 1");
$TeamDM::Siege::BlueColor = wrenchColorMatch("0 0 1 1");
$TeamDM::Siege::PurpleColor = wrenchColorMatch("0.7 0.1 0.5 1");

function sgCtrlSO::tdmStart()
{
 if((%a = $TeamDM::packagemanager.tdmcheck()) !$= "1")
 {
  servercmdStartPackage(-1,"Siege");
  messageall('',"(" @ %a @ ")");
  return;
 }
 $TeamDM::Siege::GameWon = 0;
 if($TeamDM::Siege::DefendTime > 2)
 {
 $TeamDM::Siege::DefendWin = schedule(60 * 1000 * ($TeamDM::Siege::DefendTime-2),0,sgTwoMin);
 }
 else if($TeamDM::Siege::DefendTime > 1)
 {
 $TeamDM::Siege::DefendWin = schedule(60 * 1000 * ($TeamDM::Siege::DefendTime-1),0,sgOneMin);
 }
 else
 {
 $TeamDM::Siege::DefendWin = schedule(60 * 1000 * $TeamDM::Siege::DefendTime,0,sgDefWin);
 }
}

function sgCtrlSO::tdmCheck()
{
 for(%i=0;%i<mainbrickgroup.getCount();%i++)
 {
  for(%j=0;%j<mainbrickgroup.getObject(%i).getCount();%j++)
  {
   %obj = mainbrickgroup.getObject(%i).getObject(%j).getdatablock().getName();
   if(%obj $= "brickSGCapData"){%cap = 1;}
  }
 }
 if(!%cap){return "\c5No \c0Capture Points\c5 exist.";}
 return 1;
}

function sgCtrlSO::tdmSettings(%ctrl,%client)
{
 for(%i = $teamDM::TeamManager.teamcount-1;%i>-1;%i--)
 {
  %team = $TeamDM::TeamManager.team[%i];
  if(%team.name $= "Attackers"){%attackers = 1;continue;}
  if(%team.name $= "Defenders"){%defenders = 1;continue;}
  %team.leader.isLeader = "";
  for(%j = %i;%j<$teamDM::TeamManager.teamcount;%j++)
  {
   $teamDM::TeamManager.team[%j].serverID--;
   $teamDM::TeamManager.team[%j] = $teamDM::TeamManager.team[%j+1];
  }
  for(%j=0;%j<ClientGroup.getCount();%j++)
  {
  %cl = ClientGroup.getObject(%j);
  if(%cl.tdmTeam $= %team && $TeamDM::TeamsOn && isObject(%cl.minigame))
  {
   schedule(100,0,respawn,%cl);
  }
 }
 $TeamDM::TeamManager.teamCount--;
 %team.delete();
 }
 if(!%attackers){newTeam("Attackers","red");}
 if(!%defenders){newTeam("Defenders","blue");}
 $TeamDM::PackageTeamLock = 1;
}

function sgCtrlSO::tdmEnd()
{
$TeamDM::Siege::GameWon = 0;
cancel($TeamDM::Siege::DefendWin);
}

function sgCtrlSO::respawn(%obj,%this)
{
}

function sgCtrlSO::OnDeath(%obj,%client, %sourceObject, %sourceClient, %damageType, %damLoc)
{
}

function sgCtrlSO::onClientLeaveGame(%obj,%client)
{
}

datablock fxDTSBrickData(brickSGCapData : brick6x6Fdata)
{
 uiName = "(Siege) Capture Point";
 Category = "Special";
 subCategory = "Team DM";
};

function brickSGCapData::onPlant(%this,%brick)
{
 Parent::onPlant(%this,%brick);
 schedule(100,0,TriggerMakeBrick,%brick,SGCapTrigger);
}
function brickSGCapData::onRemove(%this,%brick)
{
 Parent::onRemove(%this,%brick);
 if(isObject(%brick.trigger)){%brick.trigger.delete();}
}

package sgfunctions
{
	function brickSGCapData::onPlant(%this,%brick)
	{
	 Parent::onPlant(%this,%brick);
	 %brick.setColor($TeamDM::Siege::BlueColor);
	}
	function PaintProjectile::onCollision(%this,%obj,%col,%fade,%pos,%normal)
	{
		if(%col.getClassName() !$= "fxDTSbrick" || %col.getDatablock().getName() !$= "brickSGCapData")
		{
			Parent::onCollision(%this,%obj,%col,%fade,%pos,%normal);
		}
	}
};activatepackage(sgfunctions);

datablock TriggerData(SGCapTrigger)
{
 tickPeriodMS = 100;
};

function SGCapTrigger::onTickTrigger(%this,%trigger)
{
  if($TeamDM::PackageOn !$= "Siege")
   return;
  if(!$TeamDM::TeamsOn)
   return;
  %list = %trigger.list;
  for(%i=0;%i<getWordCount(%list);%i++)
  {
   %obj = getWord(%list,%i);
   if(!isObject(%obj) || %obj.getState() $= "Dead")
    continue;
   if(%obj.client.tdmteam.name $= "Attackers")
   {
    %attackerspresent++;
   }
   if(%obj.client.tdmteam.name $= "Defenders")
   {
    %defenderspresent++;
   }
  }
  %trigger.takeover += %attackerspresent;
  %trigger.takeover -= %defenderspresent;
  if(%trigger.takeover >= $TeamDM::Siege::MaxTakeOver)
  {
   if(!%trigger.fintakeover)
   {
    %trigger.fintakeover = 1;
	 for(%i=0;%i<mainbrickgroup.getCount();%i++)
	 {
	  for(%j=0;%j<mainbrickgroup.getObject(%i).getCount();%j++)
	  {
	   %obj = mainbrickgroup.getObject(%i).getObject(%j);
	   %data = %obj.getdatablock().getName();
	   if(%data $= "brickSGCapData")
	   {
                  %totalCaptureBricks++;
	    if(%obj.trigger.takeover == $TeamDM::Siege::MaxTakeOver)
	    {
                   %capturedBricks++;
                  }
                 }
	  }
	 }
    if(!$TeamDM::Siege::GameWon && %capturedBricks >= %totalCaptureBricks)
    {
     $TeamDM::Siege::GameWon = 1;
     cancel($TeamDM::Siege::DefendWin);
		 for(%i=0;%i<$TeamDM::TeamManager.teamcount;%i++)
		 {
			if($TeamDM::TeamManager.team[%i].name $= "Attackers"){%atkcol = $TeamDM::TeamManager.team[%i].color;}
		 }
		 tdmmessageall('',"\c5The <color:" @ (%atkcol $= "" ? "FF0000" : $TeamDM::Color[%atkcol,1]) @ ">Attackers\c5 have won!");
		 tdmmessageall('',"\c5Restarting in 5 seconds.");
		 schedule(5000,0,sgrestart);
		 for(%i=0;%i<clientgroup.getcount();%i++)
		 {
			%c = clientgroup.getobject(%i);
			if(%c.tdmteam.name $= "Attackers")
			{
				%c.sgscore++;
			}
		}
    }
   }
   %trigger.takeover = $TeamDM::Siege::MaxTakeOver;
   if(isObject(%trigger.spawnbrick))
   {
    %trigger.spawnbrick.setColor($TeamDM::Siege::RedColor);
   }
  }
  else if(%trigger.takeover <= 0)
  {
   %trigger.takeover = 0;
   if(isObject(%trigger.spawnbrick))
   {
    %trigger.spawnbrick.setColor($TeamDM::Siege::BlueColor);
   }
  }
  else 
  {
   if(isObject(%trigger.spawnbrick))
   {
    %trigger.fintakeover = 0;
    %trigger.spawnbrick.setColor($TeamDM::Siege::PurpleColor);
   }
  }

	%a = %trigger.takeover;
	%b = $TeamDM::Siege::MaxTakeOver;
	%takeoverstr = "\c0";
	%fin = (%a / %b) * 65;
	if(%a >= %b){%done = "1";}
	for(%i=0;%i<=65;%i++)
	{
		if(%i >= %fin && %done $= ""){%takeoverstr = %takeoverstr @ "\c4";%done = "1";}
		%takeoverstr = %takeoverstr @ "|";
	}
	%done = "";
	%a = $TeamDM::Siege::MaxTakeOver-%trigger.takeover;
	%b = $TeamDM::Siege::MaxTakeOver;
	%takebackstr = "\c4";
	%fin = (%a / %b) * 65;
	if(%a >= %b){%done = "1";}
	for(%i=0;%i<=65;%i++)
	{
		if(%i >= %fin && %done $= ""){%takebackstr = %takebackstr @ "\c0";%done = "1";}
		%takebackstr = %takebackstr @ "|";
	}

  for(%i=0;%i<getWordCount(%list);%i++)
  {
   %obj = getWord(%list,%i);
   if(!isObject(%obj) || %obj.getState() $= "Dead")
    continue;
   if(%obj.client.tdmteam.name $= "Attackers")
   {
    commandtoclient(%obj.client,'bottomprint',%takeoverstr,1,3);
   }
   if(%obj.client.tdmteam.name $= "Defenders")
   {
    commandtoclient(%obj.client,'bottomprint',%takebackstr,1,3);
   }
  }
}

package sgfunctions
{
function brickSGCapData::onPlant(%this,%brick)
{
 Parent::onPlant(%this,%brick);
 %brick.setColor($TeamDM::Siege::BlueColor);
}
function tdmShowScores()
{
 if($TeamDM::PackageOn !$= "Siege"){Parent::tdmShowScores();return;}
 $TeamDM::Score = schedule(60000,0,tdmShowScores);
		 for(%i=0;%i<clientgroup.getcount();%i++)
		 {
			%c = clientgroup.getobject(%i);
			if(isObject(%c.tdmTeam))
			{
			%str = "<color:" @ $TeamDM::Color[%c.tdmteam.color,1] @ ">" @ %c.name @ "\c5 has won in " @ %c.sgscore @ (%c.sgscore !$= "1" ? (%c.sgscore $= "" ? "0 rounds." : " rounds.") : " round.");
			}
			else
			{
			%str = "\c3" @ %c.name @ "\c5 has won in " @ %c.sgscore @ (%c.sgscore !$= "1" ? (%c.sgscore $= "" ? "0 rounds." : " rounds.") : " round.");
			}
			schedule(2000 * %i,0,commandtoall,'bottomprint',%str,2,2,1);
		 }
}
};activatepackage(sgfunctions);

function SGCapTrigger::onLeaveTrigger(%this,%trigger,%user)
{
  if($TeamDM::PackageOn !$= "Siege")
   return;
  %cl = %user.client;
  %team = %cl.tdmteam;
  if(%user.getClassName() !$= "Player" || !isObject(%team) || !$TeamDM::TeamsOn || !isObject(%cl.minigame))
   return;
  %trigger.list = strReplace(%trigger.list,%user,"");
  %trigger.list = strReplace(%trigger.list,"  "," ");
}

function SGCapTrigger::onEnterTrigger(%this,%trigger,%user)
{
  if($TeamDM::PackageOn !$= "Siege")
   return;
  %cl = %user.client;
  %team = %cl.tdmteam;
  if(%user.getClassName() !$= "Player" || !isObject(%team) || !$TeamDM::TeamsOn || !isObject(%cl.minigame))
   return;
  if(%trigger.list $= "")
  {
   %trigger.list = %user;
  }
  else
  {
   %trigger.list = %trigger.list SPC %user;
  }
  for(%i=0;%i<clientgroup.getcount();%i++)
  {
   %c = clientgroup.getobject(%i);
   if(%c.tdmteam.name $= "Defenders" && %user.client.tdmteam.name $= "Attackers" && %trigger.takeover < $TeamDM::Siege::MaxTakeOver && isObject(%c.player) && %c.player.getState() !$= "Dead")
   {
    %c.player.emote(alarmProjectile,1);
   }
  }
}

function TriggerMakeBrick(%brick,%trig)
{
	%dist1 = getWords(%brick.getWorldBox(),0,2);
	%dist2 = getWords(%brick.getWorldBox(),3,6);
	%x = mAbs(getWord(%dist1,0) - getWord(%dist2,0));
	%y = mAbs(getWord(%dist1,1) - getWord(%dist2,1));
	%z = mAbs(getWord(%dist1,2) - getWord(%dist2,2));
	%pos = %brick.position;
	%pos = getWord(%pos,0) SPC getWord(%pos,1) SPC getWord(%pos,2);
	%p = new Trigger()
	{
		datablock = %trig;
		position = vectorAdd(%pos,-%x/2-0.1 SPC %y/2+0.1 SPC -%z/2-0.1);
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
		scale = %x+0.2 SPC %y+0.2 SPC %z + 0.5;
		rotation = "1 0 0 0";
	};
	%brick.trigger = %p;
	%p.spawnbrick = %brick;
	%p.player = %brick.getGroup().client.player;
	MissionCleanup.add(%p);
}

function WrenchcolorMatch(%rgb,%secure)
{
 %prevdist = 100000;
 %alphadist = 100000;
 %usecolor = 0; //Default
 for(%i = 0;%i < 64;%i++)
 {
     %color = getColorIDTable(%i);
     if(getWord(%color,3) > getWord(%rgb,3)){%a = getWord(%color,3);%b = getWord(%rgb,3);}else{%a = getWord(%color,3);%b = getWord(%rgb,3);}
     if(vectorDist(%rgb,getWords(%color,0,2)) < %prevdist && ((%a - %b) <= %alphadist) && (getWord(%color,3) > 0 && %secure || !%secure))
     {
      %alphadist = (%a - %b);
      %prevdist = vectorDist(%rgb,%color);%usecolor = %i;
     }
 }
 return %usecolor;
}

 function sgrestart()
 {
		 cancel($TeamDM::Siege::DefendWin);
		 $teamDM::Siege::GameWon = 0;
		 tdmmessageall('',"\c5Everyone swaps sides...");
		 for(%i=0;%i<$TeamDM::TeamManager.teamcount;%i++)
		 {
			if($TeamDM::TeamManager.team[%i].name $= "Attackers"){%atkteam = %i+1;}
			if($TeamDM::TeamManager.team[%i].name $= "Defenders"){%defteam = %i+1;}
		 }
		 for(%i=0;%i<clientgroup.getcount();%i++)
		 {
			%c = clientgroup.getobject(%i);
			if(%c.tdmteam.name $= "Attackers")
			{
			 servercmdSetTeamGUI(-1,%defteam,%i);
			}
			else
			{
			 servercmdSetTeamGUI(-1,%atkteam,%i);
			}
		 }
	 for(%i=0;%i<mainbrickgroup.getCount();%i++)
	 {
	  for(%j=0;%j<mainbrickgroup.getObject(%i).getCount();%j++)
	  {
	   %obj = mainbrickgroup.getObject(%i).getObject(%j);
	   %data = %obj.getdatablock().getName();
	   if(%data $= "brickSGCapData")
	   {
	    %obj.trigger.takeover = 0;
	    %obj.trigger.fintakeover = 0;
	    %obj.setColor($TeamDM::Siege::BlueColor);
                 }
	  }
	 }
 if($TeamDM::Siege::DefendTime > 2)
 {
 $TeamDM::Siege::DefendWin = schedule(60 * 1000 * ($TeamDM::Siege::DefendTime-2),0,sgTwoMin);
 }
 else if($TeamDM::Siege::DefendTime > 1)
 {
 $TeamDM::Siege::DefendWin = schedule(60 * 1000 * ($TeamDM::Siege::DefendTime-1),0,sgOneMin);
 }
 else
 {
 $TeamDM::Siege::DefendWin = schedule(60 * 1000 * $TeamDM::Siege::DefendTime,0,sgDefWin);
 }
 }
 
 function sgDefWin()
 {
     $TeamDM::Siege::GameWon = 1;
	for(%i=0;%i<$TeamDM::TeamManager.teamcount;%i++)
	{
	 if($TeamDM::TeamManager.team[%i].name $= "Defenders"){%atkcol = $TeamDM::TeamManager.team[%i].color;}
	}
	tdmmessageall('',"\c5The <color:" @ (%atkcol $= "" ? "FF0000" : $TeamDM::Color[%atkcol,1]) @ ">Defenders\c5 have won!");
	tdmmessageall('',"\c5Restarting in 5 seconds.");
	schedule(5000,0,sgrestart);
	for(%i=0;%i<clientgroup.getcount();%i++)
	{
	 %c = clientgroup.getobject(%i);
	 if(%c.tdmteam.name $= "Defenders")
	 {
	 	%c.sgscore++;
	 }
	}
 }

 function sgOneMin()
 {
	tdmmessageall('',"\c5One minute remaining!");
	$TeamDM::Siege::DefendWin = schedule(60 * 1000,0,sgDefWin);
 }

 function sgTwoMin()
 {
	tdmmessageall('',"\c5Two minutes remaining!");
	$TeamDM::Siege::DefendWin = schedule(60 * 1000,0,sgOneMin);
 }